@using GuedesTime.MVC.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model GuedesTime.MVC.ViewModels.SerieViewModel

<div class="modal-header">
	<div class="modal-title-container">
		<h3 class="modal-title">
			@((Model.Id == null || Model.Id == Guid.Empty) ? "Cadastrar Novas Séries" : "Editar dados da Série")
		</h3>

		<div class="info-tooltip-container">
			<i class="fas fa-info-circle info-icon"></i>
			<div class="info-tooltip-text tooltip-bottom">
				<h4 class="tooltip-title">Dica sobre Cadastro Múltiplo</h4>
				<p>
					Para cadastrar várias séries de uma vez, separe-as por vírgula (ex: 1º, 2º, 3º). O sistema criará cada uma individualmente.<br><br>
					<strong>Educação Infantil:</strong> Maternal, Jardim I, Jardim II.<br>
					<strong>Ensino Fundamental I:</strong> 1º, 2º, 3º, 4º e 5º ano.<br>
					<strong>Ensino Fundamental II:</strong> 6º, 7º, 8º e 9º ano.<br>
					<strong>Ensino Médio:</strong> 1º, 2º e 3º ano do Ensino Médio.
				</p>
			</div>
		</div>

	</div>
</div>
<form asp-controller="Serie" asp-action="Upsert" method="post" id="form-upsert-serie">
	@Html.AntiForgeryToken()
	<input type="hidden" asp-for="Id" />
	<vc:summary />

	<div class="modal-body">
		@if (Model.Id != null && Model.Id != Guid.Empty)
		{
			<div class="form-group">
				<label asp-for="SerieUnica" class="control-label"></label>
				<div class="input-with-button">
					<input asp-for="SerieUnica" class="form-control campo-ordinal-unico" placeholder="Ex: 4º" />
					<button type="button" class="clear-input-btn js-clear-input-btn" title="Limpar campo">
						<i class="fas fa-times-circle"></i>
					</button>
				</div>
				<span asp-validation-for="SerieUnica" class="text-danger"></span>
			</div>
		}
		else
		{
			<div class="form-group">
				<label asp-for="SeriesMultiplas" class="control-label"></label>
				<div class="input-with-button">
					<input asp-for="SeriesMultiplas" class="form-control campo-ordinal-multiplo"
						   placeholder="Ex: 1º, 2º, 3º" data-error-id="series-multiplas-error" />
					<button type="button" class="clear-input-btn js-clear-input-btn" title="Limpar campo">
						<i class="fas fa-times-circle"></i>
					</button>
				</div>
				<span asp-validation-for="SeriesMultiplas" class="text-danger"></span>
				<span id="series-multiplas-error" class="text-danger"></span>
			</div>
		}
		<div class="form-group">
			<label asp-for="TipoEnsino" class="control-label"></label>
			<select asp-for="TipoEnsino" class="form-control" asp-items="Model.ListaTipoEnsino">
				<option value="">Selecione o tipo de ensino</option>
			</select>
			<span asp-validation-for="TipoEnsino" class="text-danger"></span>
		</div>

		@if (Model.Id != null && Model.Id != Guid.Empty)
		{
			<div class="form-group">
				<div class="toggle-switch-group">
					<label class="control-label">Série Ativa</label>

					<div class="toggle-switch">
						<input type="checkbox"
							   id="Ativo-checkbox-visual"
							   class="campo-Ativo-toggle"
							   data-initial-value="@ViewBag.EstadoInicialAtivo.ToString().ToLower()" />
						<label class="toggle-slider" for="Ativo-checkbox-visual"></label>
					</div>
				</div>
				<input type="hidden" name="Ativo" id="hidden-Ativo-value" />
			</div>
		}
	</div>
	<div class="modal-footer">
		<button type="button" class="btn secondary-btn" data-modal-close>Cancelar</button>
		<button type="submit" class="btn primary-btn">
			@((Model.Id == null || Model.Id == Guid.Empty) ? "Criar" : "Salvar Alterações")
		</button>
	</div>
</form>