@using GuedesTime.MVC.Extensions
@using GuedesTime.MVC.ViewModels
@using GuedesTime.MVC.ViewModels.Enum
@using GuedesTime.MVC.ViewModels.Utils
@model PagedViewModel<SerieViewModel>

<div id="series-list" class="entity-list-grid">
	@if (Model.Model.Any())
	{
		@foreach (var serie in Model.Model)
		{
			<div class="entity-card">

				@if (serie.TipoEnsino == EnumTipoEnsinoViewModel.Ensino_Medio)
				{
					<h3>@serie.Nome Série</h3>
				}
				else
				{
					<h3>@serie.Nome Ano</h3>
				}


				<p>Ordem: @serie.Codigo</p>
				<p>@this.EnumDisplayName(serie.TipoEnsino)</p>
				<div class="info-row">
					@if (serie.Disciplinas != null && serie.Disciplinas.Any())
					{
						<span>Disciplinas Relacionadas:</span>
						<div class="badges-container">
							@foreach (var disciplina in serie.Disciplinas)
							{
								<span class="badge subject-badge">@disciplina.Disciplina.Nome</span>
							}
						</div>
					}
					else
					{
						<ul class="pending-check-info">
							<li>
								<i class="fas fa-exclamation-circle"></i>
								<span class="text-muted">Nenhuma disciplina relacionada</span>
							</li>
						</ul>

					}

					@if (serie.Ativo == false)
					{
						<div class="badges-container">

							<span class="badge status-pending"><i class="fa-solid fa-power-off"></i></span>

						</div>
					}

				</div>
				<div class="actions">
					<button class="btn secondary-btn btn-sm" data-modal-url="@Url.Action("Upsert", "Serie", new { id = serie.Id })">
						<i class="fas fa-pencil-alt"></i>Editar
					</button>
					<div class="inline-confirm-container">

						@if (serie.Ativo == false)
						{
							<button class="btn danger-btn btn-sm btn-deactivate">
								<i class="fas fa-power-off"></i>
								Remover
							</button>
						}
						else
						{
							<button class="btn danger-btn btn-sm btn-deactivate">
								<i class="fas fa-power-off"></i>
								Desativar
							</button>
						}

						<div class="inline-confirm-popup popup-left">
							@if (serie.Ativo == false)
							{
								<p>Remover <strong>@serie.Nome</strong>? O cadastro será removido definitivamente.</p>
							}
							else
							{
								<p>Desativar <strong>@serie.Nome</strong>? O cadastro ficará oculto.</p>
							}

							<div class="inline-confirm-actions">
								<button class="btn secondary-btn btn-sm btn-confirm-no">Cancelar</button>
								@if (serie.Ativo == false)
								{
									<button class="btn danger-btn btn-sm btn-confirm-yes"
											data-url="@Url.Action("Desativar", "Serie", new { instituicaoId = serie.InstituicaoId, id = serie.Id })">
										Sim, remover
									</button>
								}
								else
								{
									<button class="btn danger-btn btn-sm btn-confirm-yes"
											data-url="@Url.Action("Desativar", "Serie", new { instituicaoId = serie.InstituicaoId, id = serie.Id })">
										Sim, desativar
									</button>
								}

							</div>
						</div>
					</div>
				</div>
			</div>
		}
	}
	else
	{
		var notFoundViewModel = new NotFoundViewModel
		{
			IconCssClass = "fas fa-graduation-cap",
			Titulo = "Nenhuma Série Encontrada",
			Mensagem = "Parece que ainda não há séries cadastradas. Que tal adicionar a primeira para organizar suas turmas?",
			BotaoTexto = "Adicionar Nova Série",
			BotaoUrl = Url.Action("Upsert", "Serie"),
			BotaoModalTitulo = "Adicionar Nova Série"
		};

		<partial name="_ItensNotFound" model="notFoundViewModel" />
	}
</div>

<div id="series-pagination" class="pagination-controls">
	@if (Model.TotalPages > 0)
	{
		<button class="btn @(Model.Page > 1 ? "" : "disabled")" data-page="@(Model.Page - 1)" @(Model.Page > 1 ? "" : "disabled")>
			<i class="fas fa-chevron-left"></i> Anterior
		</button>

		@for (int i = 1; i <= Model.TotalPages; i++)
		{
			<button class="btn @(i == Model.Page ? "primary-btn active" : "")" data-page="@i">
				@i
			</button>
		}

		<button class="btn @(Model.Page < Model.TotalPages ? "" : "disabled")" data-page="@(Model.Page + 1)" @(Model.Page < Model.TotalPages ? "" : "disabled")>
			Próxima <i class="fas fa-chevron-right"></i>
		</button>
	}
</div>