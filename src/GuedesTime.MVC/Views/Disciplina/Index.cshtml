@using GuedesTime.MVC.Extensions
@using GuedesTime.MVC.ViewModels
@using GuedesTime.MVC.ViewModels.Utils
@model PagedViewModel<DisciplinaViewModel>

@{
    ViewData["Title"] = "Disciplinas";
    Layout = "_Layout";
}

<div class="section-header">
    <h2 class="section-title">Disciplinas</h2>

    <div class="info-tooltip-container">
        <i class="fas fa-info-circle info-icon"></i>
        <div class="info-tooltip-text tooltip-bottom">
            <h4 class="tooltip-title">Listagem e Cadastro das Disciplinas</h4>
            <p>
                Nesta seção é possível cadastrar e gerenciar as disciplinas que serão atribuídas às turmas, como Matemática, Português, História etc.
            </p>
        </div>
    </div>

    <button type="button" id="add-disciplina-btn" class="btn primary-btn"
            data-modal-url="@Url.Action("Upsert", "Disciplina")"
            data-modal-title="Adicionar Nova Disciplina">
        <i class="fas fa-plus"></i> Adicionar Disciplina
    </button>
</div>

<form id="filter-form"
      class="js-dynamic-filter-form"
      data-url="@Url.Action("Index")"
      data-list-container="#list-container">

    <div class="filter-bar" style="align-items: center">
        <input type="text" name="search" placeholder="Buscar disciplinas..."
               class="search-input js-dynamic-search" value="@Model.Search" />

        <select id="disciplina-professor-filter" class="filter-select js-dynamic-filter" name="professor">
            <option value="">Filtrar por Professor</option>
            @foreach (var opcao in (List<SelectListItem>)ViewBag.FiltroProfessor)
            {
                var isSelected = (ViewBag.ProfessorSelecionado != null && ViewBag.ProfessorSelecionado.ToString() == opcao.Value);
                <option value="@opcao.Value" selected="@(isSelected ? "selected" : null)">@opcao.Text</option>
            }
        </select>

        <select id="disciplina-serie-filter" class="filter-select js-dynamic-filter" name="serie">
            <option value="">Filtrar por Série</option>
            @foreach (var opcao in (List<SelectListItem>)ViewBag.FiltroSerie)
            {
                var isSelected = (ViewBag.SerieSelecionada != null && ViewBag.SerieSelecionada.ToString() == opcao.Value);
                <option value="@opcao.Value" selected="@(isSelected ? "selected" : null)">@opcao.Text</option>
            }
        </select>

        <div class="filter-toggle-group">
            <label class="control-label" for="disciplina-status-toggle">Apenas ativas</label>
            <div class="toggle-switch">
                <input type="checkbox" id="disciplina-status-toggle" name="ativo" value="true"
                       class="js-dynamic-filter js-default-checked" @(ViewBag.FiltroAtivo != false ? "checked" : "") />
                <label class="toggle-slider" for="disciplina-status-toggle"></label>
            </div>
        </div>

        <button type="button" id="clear-filters-btn" class="btn tertiary-btn js-clear-filters-btn" title="Limpar filtros">
            <i class="fas fa-times"></i> Limpar
        </button>
    </div>
</form>

<div id="list-container">
    @await Html.PartialAsync("_DisciplinaListPartial", Model)
</div>
