@using GuedesTime.MVC.ViewModels.Utils
@model GuedesTime.MVC.ViewModels.PagedInstituicoesViewModel

@{
	ViewData["Title"] = "Minhas Instituições";
	Layout = "_LayoutSimples";
	var resumoInstituicoes = ViewBag.ResumoInstituicoes as Dictionary<Guid, DadosAgregadosInstituicaoViewModel>;
}

<div class="page-container">
	<header class="page-header">
		<h1 class="section-title">Minhas Instituições</h1>
		<form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home")" method="post">
			<button type="submit" class="btn danger-btn">
				<i class="fas fa-sign-out-alt"></i> Sair
			</button>
		</form>
	</header>

	<div class="card">
		<h3 class="card-title">Selecione uma instituição para gerenciar</h3>

		<form asp-action="SelecionarInstituicao" method="get" class="filters-and-search">
			<input type="text" name="search" value="@Model.Search" placeholder="Buscar por nome..." class="search-input" />

			<select name="ativo" onchange="this.form.submit()" class="filter-select" aria-label="Filtrar por status">
				<option value="true" selected="@(Context.Request.Query["ativo"] == "true" ? "selected" : null)">Ativas</option>
				<option value="false" selected="@(Context.Request.Query["ativo"] == "false" ? "selected" : null)">Inativas</option>
			</select>

			<button type="submit" class="btn primary-btn"><i class="fas fa-search"></i> Buscar</button>
		</form>

		<div class="entity-list-grid" style="grid-template-columns: 1fr;">
			@foreach (var instituicao in Model.Instituicoes)
			{
				var id = instituicao.Id ?? Guid.Empty;
				var resumo = new DadosAgregadosInstituicaoViewModel();
				resumoInstituicoes?.TryGetValue(id, out resumo);
				<a asp-action="Definir" asp-route-id="@id" class="institution-card">
					<div class="institution-info">
						<h3><i class="fas fa-school"></i> @instituicao.Nome</h3>
						<p>
							@if (resumo.TotalTurmas == 0 && resumo.TotalDisciplinas == 0 && resumo.TotalProfessores == 0)
							{
								<text>Nenhum dado cadastrado ainda.</text>
							}
							else
							{
								<text>@resumo.TotalDisciplinas disciplinas, @resumo.TotalTurmas turmas e @resumo.TotalProfessores professores cadastrados.</text>
							}
						</p>
					</div>

					<div class="actions">
						<span class="btn secondary-btn" onclick="openModalFromButton(event)" data-modal-url="@Url.Action("Upsert", "Instituicao", new { id = id })" data-modal-title="Editar Instituição">
							Editar <i class="fas fa-pencil-alt"></i>
						</span>
						<span class="btn secondary-btn" onclick="navigateTo(event)" data-redirect-url="@Url.Action("Definir", "Instituicao", new { id = id })">
							Gerenciar <i class="fas fa-arrow-right"></i>
						</span>
					</div>
				</a>
			}
		</div>

		<nav aria-label="Paginação das instituições" class="pagination-controls">
			@if (Model.Page > 1)
			{
				var prevPageUrl = Url.Action("SelecionarInstituicao", new { page = Model.Page - 1, pageSize = Model.PageSize, search = Model.Search, ativo = Context.Request.Query["ativo"] });
				<button onclick="window.location.href='@prevPageUrl'"><i class="fas fa-chevron-left"></i> Anterior</button>
			}
			else
			{
				<button disabled><i class="fas fa-chevron-left"></i> Anterior</button>
			}

			@for (var i = 1; i <= Model.TotalPages; i++)
			{
				if (i == Model.Page)
				{
					<button class="active">@i</button>
				}
				else
				{
					var pageUrl = Url.Action("SelecionarInstituicao", new { page = i, pageSize = Model.PageSize, search = Model.Search, ativo = Context.Request.Query["ativo"] });
					<button onclick="window.location.href='@pageUrl'">@i</button>
				}
			}

			@if (Model.Page < Model.TotalPages)
			{
				var nextPageUrl = Url.Action("SelecionarInstituicao", new { page = Model.Page + 1, pageSize = Model.PageSize, search = Model.Search, ativo = Context.Request.Query["ativo"] });
				<button onclick="window.location.href='@nextPageUrl'">Próxima <i class="fas fa-chevron-right"></i></button>
			}
			else
			{
				<button disabled>Próxima <i class="fas fa-chevron-right"></i></button>
			}
		</nav>

		<hr style="margin: 32px 0;">

		<h3 class="card-title">Ou crie uma nova</h3>

		<div class="filter-bar" style="display: flex; gap: 10px;">
			<button type="button" class="btn primary-btn"
					data-modal-url="@Url.Action("Upsert", "Instituicao")"
					data-modal-title="Adicionar Nova Instituição"
					style="flex-grow: 1;">
				<i class="fas fa-plus"></i> Criar Nova Instituição
			</button>
		</div>
	</div>
</div>